{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["searchIncludings","str","subStr","toLowerCase","includes","TodoList","todoItems","selectedTodoId","onSelectTodo","onUserSelect","preparedTodos","todos","filteringOptions","query","filter","todo","completed","title","filterTodos","currentQuery","className","map","completionStatus","isTodoSelected","id","classnames","style","color","type","onClick","userId","TodoFilter","onFilterChange","onInputChange","onChange","target","value","event","placeholder","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onModalClose","selectedUserTodo","useState","userInfo","setUserInfo","userTodo","setUserTodo","useEffect","response","name","href","email","App","setSelectedTodoId","selectedUserId","setSelectedUserId","setTodos","setCurrentQuery","selectedTodo","setSelectedTodo","setFilteringOptions","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a91ab27e.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype ListOfTodos = {\n  todoItems: Todo[],\n  onSelectTodo(todId: number): void,\n  onUserSelect(userId: number): void,\n  selectedTodoId: number,\n  filteringOptions: string\n  currentQuery: string,\n};\n\nfunction searchIncludings(str: string, subStr: string): boolean {\n  return str.toLowerCase().includes(subStr.toLowerCase());\n}\n\nconst filterTodos = (\n  todos: Todo[],\n  filteringOptions: string,\n  query: string,\n): Todo[] => {\n  switch (filteringOptions) {\n    case 'completed':\n      return todos\n        .filter(todo => todo.completed === true)\n        .filter(todo => searchIncludings(todo.title, query));\n\n    case 'active':\n      return todos\n        .filter(todo => todo.completed === false)\n        .filter(todo => searchIncludings(todo.title, query));\n\n    default:\n      return todos\n        .filter(todo => searchIncludings(todo.title, query));\n  }\n};\n\nexport const TodoList: React.FC<ListOfTodos> = ({\n  todoItems,\n  selectedTodoId,\n  onSelectTodo,\n  onUserSelect,\n  filteringOptions,\n  currentQuery,\n}) => {\n  const preparedTodos = filterTodos(\n    todoItems,\n    filteringOptions,\n    currentQuery,\n  );\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {preparedTodos.map((todo) => {\n          const completionStatus = todo.completed;\n          const isTodoSelected = selectedTodoId === todo.id;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classnames(\n                { 'has-background-info-light': isTodoSelected },\n              )}\n              key={todo.title}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {completionStatus && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  style={{ color: completionStatus ? 'green' : 'red' }}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                {selectedTodoId === todo.id\n                  ? (\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button is-link\"\n                      type=\"button\"\n                      onClick={() => onSelectTodo(0)}\n                    >\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye-slash\" />\n                      </span>\n                    </button>\n                  )\n                  : (\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => {\n                        onSelectTodo(todo.id);\n                        onUserSelect(todo.userId);\n                      }}\n                    >\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye\" />\n                      </span>\n                    </button>\n                  )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Filter = {\n  onFilterChange(value: string): void,\n  onInputChange(value: string): void,\n  currentQuery: string,\n};\n\nexport const TodoFilter: React.FC<Filter> = ({\n  currentQuery,\n  onFilterChange,\n  onInputChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={({ target }) => onFilterChange(target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        value={currentQuery}\n        className=\"input\"\n        onChange={(event) => onInputChange(event.target.value)}\n        placeholder=\"Search...\"\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n        {currentQuery && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onInputChange('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Modal = {\n  selectedUserTodo: Todo | null,\n  onModalClose(): void,\n};\n\nexport const TodoModal: React.FC<Modal> = ({\n  onModalClose,\n  selectedUserTodo,\n}) => {\n  const [userInfo, setUserInfo] = useState<User | null>(null);\n  const [userTodo, setUserTodo] = useState<Todo | null>(selectedUserTodo);\n\n  useEffect(() => {\n    if (userTodo) {\n      getUser(userTodo.id)\n        .then(response => setUserInfo(response));\n    }\n  }, [userTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!userInfo?.name ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo ${userTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onModalClose();\n                setUserTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {userTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {userTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`${userInfo.email}`}>\n                {userInfo.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [currentQuery, setCurrentQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const [filteringOptions, setFilteringOptions] = useState('All');\n\n  const onModalClose = () => {\n    setSelectedTodoId(0);\n    setSelectedUserId(0);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(response => setTodos(response));\n  }, []);\n\n  useEffect(() => {\n    setSelectedTodo(() => todos\n      .find(todo => todo.id === selectedTodoId) || null);\n  }, [selectedTodoId]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                currentQuery={currentQuery}\n                onFilterChange={setFilteringOptions}\n                onInputChange={setCurrentQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos\n                ? (\n                  <TodoList\n                    currentQuery={currentQuery}\n                    filteringOptions={filteringOptions}\n                    todoItems={todos}\n                    onSelectTodo={setSelectedTodoId}\n                    onUserSelect={setSelectedUserId}\n                    selectedTodoId={selectedTodoId}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedUserId > 0 && selectedTodo && (\n        <TodoModal\n          selectedUserTodo={selectedTodo}\n          onModalClose={onModalClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todoItems","selectedTodoId","onSelectTodo","onUserSelect","preparedTodos","todos","filteringOptions","query","filter","todo","completed","title","includes","filterTodos","currentQuery","className","map","id","style","color","type","onClick","userId","TodoFilter","onFilterChange","onInputChange","onChange","target","value","event","placeholder","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedUserId","onModalClose","useState","response","setUserInfo","userInfo","find","userTodo","setUserTodo","name","href","email","App","setSelectedTodoId","setSelectedUserId","setTodos","setCurrentQuery","setFilteringOptions","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b04a52ef.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype ListOfTodos = {\n  todoItems: Todo[],\n  onSelectTodo(todId: number): void,\n  onUserSelect(userId: number): void,\n  selectedTodoId: number,\n  filteringOptions: string\n  currentQuery: string,\n};\n\nconst filterTodos = (\n  todos: Todo[],\n  filteringOptions: string,\n  query: string,\n): Todo[] => {\n  switch (filteringOptions) {\n    case 'completed':\n      return todos\n        .filter(todo => todo.completed === true)\n        .filter(todo => todo.title.includes(query));\n\n    case 'active':\n      return todos\n        .filter(todo => todo.completed === false)\n        .filter(todo => todo.title.includes(query));\n\n    default:\n      return todos.filter(todo => todo.title.includes(query));\n  }\n};\n\nexport const TodoList: React.FC<ListOfTodos> = ({\n  todoItems,\n  selectedTodoId,\n  onSelectTodo,\n  onUserSelect,\n  filteringOptions,\n  currentQuery,\n}) => {\n  const preparedTodos = filterTodos(\n    todoItems,\n    filteringOptions,\n    currentQuery,\n  );\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {preparedTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.title}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                style={{ color: todo.completed === true ? 'green' : 'red' }}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodoId === todo.id\n                ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button is-link\"\n                    type=\"button\"\n                    onClick={() => onSelectTodo(0)}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                )\n                : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      onSelectTodo(todo.id);\n                      onUserSelect(todo.userId);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Filter = {\n  onFilterChange(value: string): void,\n  onInputChange(value: string): void,\n  currentQuery: string,\n};\n\nexport const TodoFilter: React.FC<Filter> = ({\n  currentQuery,\n  onFilterChange,\n  onInputChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={({ target }) => onFilterChange(target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        value={currentQuery}\n        className=\"input\"\n        onChange={(event) => onInputChange(event.target.value)}\n        placeholder=\"Search...\"\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n        {currentQuery && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onInputChange('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Modal = {\n  todos: Todo[],\n  selectedUserId: number,\n  selectedTodoId: number,\n  onModalClose(): void,\n};\n\nexport const TodoModal: React.FC<Modal> = ({\n  selectedUserId,\n  selectedTodoId,\n  onModalClose,\n  todos,\n}) => {\n  const [userInfo, setUserInfo] = useState<User | null>(() => {\n    return getUser(selectedUserId)\n      .then(response => setUserInfo(response));\n  });\n\n  const [userTodo, setUserTodo] = useState<Todo | null>(() => {\n    return todos.find(todo => todo.id === selectedTodoId) || null;\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!userInfo?.name ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #2\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onModalClose();\n                setUserTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {userTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {userTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`${userInfo.email}`}>\n                {userInfo.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>(() => {\n    return getTodos()\n      .then(response => setTodos(response));\n  });\n  const [currentQuery, setCurrentQuery] = useState('');\n\n  const [filteringOptions, setFilteringOptions] = useState('All');\n\n  const onModalClose = () => {\n    setSelectedTodoId(0);\n    setSelectedUserId(0);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                currentQuery={currentQuery}\n                onFilterChange={setFilteringOptions}\n                onInputChange={setCurrentQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    currentQuery={currentQuery}\n                    filteringOptions={filteringOptions}\n                    todoItems={todos}\n                    onSelectTodo={setSelectedTodoId}\n                    onUserSelect={setSelectedUserId}\n                    selectedTodoId={selectedTodoId}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedUserId && (\n        <TodoModal\n          todos={todos}\n          selectedTodoId={selectedTodoId}\n          selectedUserId={selectedUserId}\n          onModalClose={onModalClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}